{"ast":null,"code":"var _jsxFileName = \"/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/otherVideos.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * Purpose: Display All other videos in YouTube channel besides Covid-19 related ones.\n * \n */\n//Imports\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport youtubeAPI from '../apis/youtube';\nimport { alpha, Grid, Card, CardContent, CardMedia, InputBase, makeStyles, Typography, Collapse, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close'; //Styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  gridContainer: {//minHeight:\"100vh\",\n  },\n  media: {//paddingTop:\"56.25%\",\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    border: '1px solid orange',\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\nexport default function OtherVideos() {\n  _s();\n\n  //Constructors\n  const [data, setData] = useState([]);\n  const [alert, setAlert] = useState(false); //Error Code 403 Message\n\n  const timeOutMsg = \"403 Error: The maximum number of Requests to be made for the Day, has been reached.\" + \"Please try again tommorrow.\"; //If app loads or reloads: Populate either from API or from Session Storage.\n\n  useEffect(() => {\n    const stored = sessionStorage.getItem(\"otherVidData\");\n\n    if (stored && data.length === 0) {\n      //console.log(\"GETTING NON-COVID SESSION STORED\");\n      const resData = JSON.parse(stored);\n      setData(resData.items);\n    } else if (data.length === 0 && !stored) {\n      //console.log(\"GETTING NON-COVID VIDS\");\n      async function getOtherVids() {\n        // Make sure to filter query so it has nothing to do with keywords used in previous query\n        let response = await youtubeAPI.get('search', {\n          params: {\n            q: '-COVID -19 -Vaccine -Podcast'\n          }\n        }).catch(function (error) {\n          console.log(\"ERROR!!\", error.response);\n\n          if (error.response.error.code === 403) {\n            setAlert(true);\n          }\n        });\n        sessionStorage.setItem(\"otherVidData\", JSON.stringify(response.data));\n        setData(response.data.items);\n      }\n\n      getOtherVids();\n    }\n  }, [data]);\n  const classes = useStyles(); //If user Searches something, filter data.\n\n  const keyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault(); //console.log(\"EVENT: \", event.target.value);\n\n      const keywords = event.target.value;\n      let filteredVids = data.filter(item => item.snippet.title.includes(keywords));\n\n      if (filteredVids.length === 0) {\n        alert(\"No Videos in this List match this description, please try other list.\");\n        setData([]);\n      } else {\n        setData(filteredVids);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: alert,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          size: \"small\",\n          onClick: () => {\n            setAlert(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this),\n        severity: \"error\",\n        variant: \"filled\",\n        children: timeOutMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 3,\n      justifyContent: \"space-between\",\n      alignItems: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.search,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.searchIcon,\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n            placeholder: \"Search\\u2026\",\n            classes: {\n              root: classes.inputRoot,\n              input: classes.inputInput\n            },\n            onKeyDown: keyPress,\n            inputProps: {\n              'aria-label': 'search'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), data.length > 0 ? data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            component: \"iframe\",\n            title: \"test\",\n            src: `https://www.youtube.com/embed/${item.id.videoId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              gutterBottom: true,\n              variant: \"h5\",\n              children: item.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle\",\n              children: [\"Description:\", item.snippet.description !== \"\" ? item.snippet.description : \"Not Available\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              paragraph: true,\n              children: [\"Date: \", item.snippet.publishedAt.substring(0, 10)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"No Such Videos Exist in this Category. Please try the Other List.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 10\n  }, this);\n}\n\n_s(OtherVideos, \"UiDA3P68xwVgE+CTJq5DhxWe9J8=\", false, function () {\n  return [useStyles];\n});\n\n_c = OtherVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherVideos\");","map":{"version":3,"sources":["/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/otherVideos.jsx"],"names":["React","useState","useEffect","Header","youtubeAPI","alpha","Grid","Card","CardContent","CardMedia","InputBase","makeStyles","Typography","Collapse","IconButton","Alert","SearchIcon","CloseIcon","useStyles","theme","toolbar","mixins","gridContainer","media","search","position","borderRadius","shape","border","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","OtherVideos","data","setData","alert","setAlert","timeOutMsg","stored","sessionStorage","getItem","length","resData","JSON","parse","items","getOtherVids","response","get","params","q","catch","error","console","log","code","setItem","stringify","classes","keyPress","event","key","preventDefault","keywords","target","value","filteredVids","filter","item","snippet","title","includes","root","input","map","id","videoId","description","publishedAt","substring"],"mappings":"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","sourcesContent":["/**\n * Purpose: Display All other videos in YouTube channel besides Covid-19 related ones.\n * \n */\n\n//Imports\nimport React, {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport youtubeAPI from '../apis/youtube';\nimport {alpha,\n        Grid, \n        Card,\n        CardContent,\n        CardMedia,\n        InputBase,\n        makeStyles,\n        Typography,\n        Collapse,\n        IconButton\n    } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n//Styling\nconst useStyles = makeStyles((theme) =>({\n    toolbar: theme.mixins.toolbar,\n    gridContainer:{\n        //minHeight:\"100vh\",\n    },\n    media:{\n        //paddingTop:\"56.25%\",\n    },\n    search:{\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        border: '1px solid orange',\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n        }\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n        width: '20ch',\n        },\n    },  \n }));\n\nexport default function OtherVideos(){\n    //Constructors\n    const [data,setData] = useState([]);\n    const [alert, setAlert] = useState(false);\n\n    //Error Code 403 Message\n    const timeOutMsg = \"403 Error: The maximum number of Requests to be made for the Day, has been reached.\"\n                       + \"Please try again tommorrow.\";\n\n    //If app loads or reloads: Populate either from API or from Session Storage.\n    useEffect(()=>{\n        const stored = sessionStorage.getItem(\"otherVidData\");\n        if(stored && data.length === 0){\n            //console.log(\"GETTING NON-COVID SESSION STORED\");\n            const resData = JSON.parse(stored);\n            setData(resData.items);\n        }\n        else if(data.length === 0 && !stored){\n            //console.log(\"GETTING NON-COVID VIDS\");\n            async function getOtherVids(){\n                // Make sure to filter query so it has nothing to do with keywords used in previous query\n                let response = await youtubeAPI.get('search', {params:{\n                q:'-COVID -19 -Vaccine -Podcast',\n                }}).catch(function(error){\n                       console.log(\"ERROR!!\", error.response);\n                        if(error.response.error.code === 403){\n                           setAlert(true);\n                        }\n                });\n                sessionStorage.setItem(\"otherVidData\", JSON.stringify(response.data));\n                setData(response.data.items);\n            }\n            getOtherVids();\n        }\n       \n    },[data]);\n\n    const classes  = useStyles();\n\n    //If user Searches something, filter data.\n    const keyPress = (event) =>{\n        if(event.key === 'Enter'){\n            event.preventDefault();\n            //console.log(\"EVENT: \", event.target.value);\n            const keywords = event.target.value;\n            let filteredVids = data.filter(item => item.snippet.title.includes(keywords));\n            if(filteredVids.length === 0){\n                alert(\"No Videos in this List match this description, please try other list.\")\n                setData([]);\n            }else{\n                \n                setData(filteredVids);\n            }\n            \n        }\n    }\n    return(\n\n         <div className=\"container\">\n            \n            <Header />\n\n            {/*Alert User in case, nothing is populated in storage and \n            Max API calls are reached */}\n            <Collapse in={alert}>\n                <Alert action={\n                    <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() =>{\n                            setAlert(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"inherit\"/>\n                    </IconButton>\n                }\n                severity=\"error\"\n                variant=\"filled\"\n                >\n                    {timeOutMsg}\n                </Alert>\n            </Collapse>\n             {/*Create space between grid & app bar*/}\n            <div className={classes.toolbar}></div>\n\n            {/*Grid Component */}\n            <Grid container \n                  direction=\"row\"\n                  spacing={3}\n                  justifyContent=\"space-between\"\n                  alignItems='stretch'\n            >\n            <Grid item xs={12}>\n                  <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              onKeyDown={keyPress}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n            </Grid>\n            {data.length > 0 ?(\n                    data.map((item) => (\n                        <Grid item xs={12} sm={6} md={3}>\n                            <Card>\n                                  <CardMedia\n                                             className={classes.media} \n                                             component=\"iframe\"\n                                             title=\"test\"\n                                             src={`https://www.youtube.com/embed/${item.id.videoId}`}  \n                                    />\n                                    <CardContent>\n                                        <Typography align=\"center\" gutterBottom variant=\"h5\">{item.snippet.title}</Typography>\n                                        <Typography align=\"left\" variant=\"subtitle\">Description:{item.snippet.description !==\"\"? \n                                                                                        item.snippet.description : \"Not Available\"}</Typography> \n                                        <Typography align=\"left\" paragraph>Date: {item.snippet.publishedAt.substring(0,10)}</Typography>\n                                    </CardContent>\n                            </Card>\n                        </Grid>\n                ))   \n                ):(\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">No Such Videos Exist in this Category. Please try the Other List.</Typography>\n                    </Grid>\n                    \n                )}\n            </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}