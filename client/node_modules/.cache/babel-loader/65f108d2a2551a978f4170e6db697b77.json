{"ast":null,"code":"var _jsxFileName = \"/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport { alpha, Grid, Card, CardContent, CardMedia, InputBase, makeStyles, Typography } from '@material-ui/core';\nimport youtubeAPI from '../apis/youtube';\nimport SearchIcon from '@material-ui/icons/Search'; //const playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  gridContainer: {\n    minHeight: \"100vh\"\n  },\n  media: {\n    width: \"80%\"\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\nexport default function CovidVideos() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const stored = sessionStorage.getItem(\"covidVidData\");\n\n    if (stored) {\n      //console.log(\"GETTING FROM COVID SESSION STORED\");\n      const resData = JSON.parse(stored);\n      setData(resData.items);\n    } else {\n      async function getCovidVids() {\n        //console.log(\"GETTING COVID VIDS\")\n        let response = await youtubeAPI.get('/search', {\n          params: {\n            q: 'COVID-19 Vaccine Podcast'\n          }\n        }).catch(function (error) {\n          console.log(\"ERROR!!\", error.response);\n        });\n        sessionStorage.setItem(\"covidVidData\", JSON.stringify(response.data));\n        setData(response.data.items);\n      }\n\n      getCovidVids();\n    }\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: classes.gridContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.search,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.searchIcon,\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n            backgroundColor: \"orange\",\n            placeholder: \"Search Videos...\",\n            classes: {\n              root: classes.inputRoot,\n              input: classes.inputInput\n            },\n            inputProps: {\n              'aria-label': 'search'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), data.length > 0 ? data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"iframe\",\n            title: \"test\",\n            src: `https://www.youtube.com/embed/${item.id.videoId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              gutterBottom: true,\n              variant: \"h5\",\n              children: item.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle\",\n              children: [\"Description:\", item.snippet.description !== \"\" ? item.snippet.description : \"Not Available\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              paragraph: true,\n              children: [\"Date: \", item.snippet.publishedAt.substring(0, 10)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"No Such Videos Exist in this Category. Please try the Other List.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CovidVideos, \"fCZiFh5PRnzfrBhxFSk9qK+c93E=\", false, function () {\n  return [useStyles];\n});\n\n_c = CovidVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidVideos\");","map":{"version":3,"sources":["/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx"],"names":["React","useState","useEffect","Header","alpha","Grid","Card","CardContent","CardMedia","InputBase","makeStyles","Typography","youtubeAPI","SearchIcon","useStyles","theme","toolbar","mixins","gridContainer","minHeight","media","width","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","CovidVideos","data","setData","stored","sessionStorage","getItem","resData","JSON","parse","items","getCovidVids","response","get","params","q","catch","error","console","log","setItem","stringify","classes","root","input","length","map","item","id","videoId","snippet","title","description","publishedAt","substring"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport {alpha,\n        Grid, \n        Card,\n        CardContent,\n        CardMedia,\n        InputBase,\n        makeStyles,\n        Typography\n    } from '@material-ui/core';\nimport youtubeAPI from '../apis/youtube';\nimport SearchIcon from '@material-ui/icons/Search'\n//const playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\n const useStyles = makeStyles((theme) =>({\n    toolbar: theme.mixins.toolbar,\n    gridContainer:{\n        minHeight:\"100vh\",\n    },\n    media:{\n        width:\"80%\",\n    },\n    search:{\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n        }\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n        width: '20ch',\n        },\n    },\n }));\nexport default function CovidVideos(){\n    const [data,setData] = useState([]);\n    useEffect(()=>{\n       const stored = sessionStorage.getItem(\"covidVidData\");\n       if(stored){\n         //console.log(\"GETTING FROM COVID SESSION STORED\");\n         const resData = JSON.parse(stored);\n         setData(resData.items);\n       }\n       else{\n            async function getCovidVids(){\n                //console.log(\"GETTING COVID VIDS\")\n                let response = await youtubeAPI.get('/search', {params:{\n                    q:'COVID-19 Vaccine Podcast',\n                }}).catch(function(error){\n                       console.log(\"ERROR!!\", error.response);\n                });\n                sessionStorage.setItem(\"covidVidData\", JSON.stringify(response.data));\n                setData(response.data.items);\n            }\n           getCovidVids();\n       }\n    },[]);\n    const classes  = useStyles();\n   \n    return(\n        <div className=\"container\">\n            <Header />\n            {/*Create space between grid & app bar*/}\n            <div className={classes.toolbar}> </div>\n                <Grid container \n                      direction=\"column\"\n                      spacing={3}\n                      justifyContent='center'\n                      alignItems='center'\n                      className={classes.gridContainer}\n                >\n                <Grid xs={12} sm={6} md={3}>\n                  <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                    <InputBase\n                    backgroundColor=\"orange\"\n                    placeholder=\"Search Videos...\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    />\n                </div>\n                </Grid>\n                {/**Take Json input from search term and display items in Card. */}\n                {data.length > 0 ?(\n                    data.map((item) => (\n                        <Grid item xs={12} sm={6} md={3}>\n                            <Card>\n                                  <CardMedia \n                                             component=\"iframe\"\n                                             title=\"test\"\n                                             src={`https://www.youtube.com/embed/${item.id.videoId}`}  \n                                    />\n                                    <CardContent>\n                                        <Typography align=\"center\" gutterBottom variant=\"h5\">{item.snippet.title}</Typography>\n                                        <Typography align=\"left\" variant=\"subtitle\">Description:{item.snippet.description !==\"\"? \n                                                            item.snippet.description : \"Not Available\"}</Typography> \n                                        <Typography align=\"left\" paragraph>Date: {item.snippet.publishedAt.substring(0,10)}</Typography>\n                                    </CardContent>\n                            </Card>\n                        </Grid>\n                ))   \n                ):(\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">No Such Videos Exist in this Category. Please try the Other List.</Typography>\n                    </Grid>\n                    \n                )}\n                </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}