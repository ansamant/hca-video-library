{"ast":null,"code":"var _jsxFileName = \"/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport { Grid, Card, CardHeader, CardContent, CardActions, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport youtube from '../apis/youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  card: {\n    minWidth: 275\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  }\n}));\nexport default function CovidVideos() {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    async function getCovidVids() {\n      let response = await youtube.get('search', {\n        params: {\n          q: 'COVID-19 Vaccine Podcast'\n        }\n      });\n      let responseData = await response.json();\n      console.log(\"DATA\", responseData);\n      setData(responseData);\n    }\n\n    getCovidVids();\n  }, []);\n  const classes = useStyles();\n  let vidItems = data.items;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: classes.gridContainer,\n      children: vidItems.length() > 0 ? vidItems.map(item => {\n        /*#__PURE__*/\n        _jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"iframe\",\n            title: \"test\",\n            src: `https://www.youtube.com/embed/${item.id.videoId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              gutterBottom: true,\n              variant: \"h5\",\n              children: item.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"body2\",\n              children: [\"Description:\", item.snippet.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              paragraph: true,\n              children: [\"Date:\", item.snippet.publishedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"No Videos Available, please check if API Key is Valid or Missing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CovidVideos, \"ONa9JmuwffVvOM3CBpG5DakuW/w=\", false, function () {\n  return [useStyles];\n});\n\n_c = CovidVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidVideos\");","map":{"version":3,"sources":["/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx"],"names":["React","useState","useEffect","Header","Grid","Card","CardHeader","CardContent","CardActions","CardMedia","makeStyles","Typography","youtube","playlistId","useStyles","theme","toolbar","mixins","card","minWidth","media","height","paddingTop","CovidVideos","data","setData","getCovidVids","response","get","params","q","responseData","json","console","log","classes","vidItems","items","gridContainer","length","map","item","id","videoId","snippet","title","description","publishedAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport {Grid, \n        Card,\n        CardHeader,\n        CardContent,\n        CardActions,\n        CardMedia,\n        makeStyles,\n        Typography\n    } from '@material-ui/core';\nimport youtube from '../apis/youtube';\nconst playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\n const useStyles = makeStyles((theme) =>({\n    toolbar: theme.mixins.toolbar,\n    card:{\n        minWidth: 275,\n    },\n    media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n }));\nexport default function CovidVideos(){\n    const [data,setData] = useState();\n    useEffect(()=>{\n       async function getCovidVids(){\n           let response = await youtube.get('search', {params:{\n            q:'COVID-19 Vaccine Podcast',\n           }});\n           let responseData = await response.json();\n           console.log(\"DATA\", responseData);\n           setData(responseData);\n       }\n       getCovidVids();\n       \n    },[]);\n    const classes  = useStyles();\n    let vidItems = data.items;\n    return(\n        <div className=\"container\">\n            <Header />\n            {/*Create space between grid & app bar*/}\n            <div className={classes.toolbar}> </div>\n                <Grid container \n                      direction=\"column\"\n                  spacing={3}\n                  justifyContent='center'\n                  alignItems='center'\n                  className={classes.gridContainer}\n                >\n                {/**Take Json input from search term and display items in Card. */}\n                {vidItems.length() > 0 ?(\n                    vidItems.map((item) =>{\n                        <Grid item xs={12} sm={6}>\n                            <CardMedia component=\"iframe\"\n                                       title=\"test\"\n                                       src={`https://www.youtube.com/embed/${item.id.videoId}`}  \n                            />\n                            <CardContent>\n                                <Typography align=\"center\" gutterBottom variant=\"h5\">{item.snippet.title}</Typography>\n                                <Typography align=\"left\" variant=\"body2\">Description:{item.snippet.description}</Typography> \n                                <Typography align=\"left\" paragraph>Date:{item.snippet.publishedAt}</Typography>\n                            </CardContent>\n                        </Grid>\n                    })   \n                ):(\n                    <Typography variant=\"h3\">No Videos Available, please check if API Key is Valid or Missing</Typography>\n                )}\n                </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}