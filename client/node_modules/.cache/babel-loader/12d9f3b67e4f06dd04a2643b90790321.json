{"ast":null,"code":"var _jsxFileName = \"/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport { Grid, Card, CardHeader, CardContent, CardActions, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport youtube from '../apis/youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  card: {\n    minWidth: 275\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  }\n}));\nexport default function CovidVideos() {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    async function getCovidVids() {\n      let response = await youtube.get('/search', {\n        params: {\n          q: 'COVID-19 Vaccine Podcast'\n        }\n      });\n      setData(response.data);\n    }\n\n    getCovidVids();\n  }, []);\n  const classes = useStyles();\n  console.log(data); //let vidItems = data.items;\n  //console.log(\"VITEMS\", vidItems);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: classes.gridContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CovidVideos, \"U7hfCM0WMiyc2GWAG5kQMRTOt1M=\", false, function () {\n  return [useStyles];\n});\n\n_c = CovidVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidVideos\");","map":{"version":3,"sources":["/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx"],"names":["React","useState","useEffect","Header","Grid","Card","CardHeader","CardContent","CardActions","CardMedia","makeStyles","Typography","youtube","playlistId","useStyles","theme","toolbar","mixins","card","minWidth","media","height","paddingTop","CovidVideos","data","setData","getCovidVids","response","get","params","q","classes","console","log","gridContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,EACQC,IADR,EAEQC,UAFR,EAGQC,WAHR,EAIQC,WAJR,EAKQC,SALR,EAMQC,UANR,EAOQC,UAPR,QAQW,mBARX;AASA,OAAOC,OAAP,MAAoB,iBAApB;;AACA,MAAMC,UAAU,GAAG,oCAAnB;AACC,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAW;AACrCC,EAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaD,OADe;AAErCE,EAAAA,IAAI,EAAC;AACDC,IAAAA,QAAQ,EAAE;AADT,GAFgC;AAKrCC,EAAAA,KAAK,EAAE;AACPC,IAAAA,MAAM,EAAE,CADD;AAEPC,IAAAA,UAAU,EAAE,QAFL,CAEe;;AAFf;AAL8B,CAAX,CAAD,CAA5B;AAUD,eAAe,SAASC,WAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBxB,QAAQ,CAAC,IAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAI;AACX,mBAAewB,YAAf,GAA6B;AACzB,UAAIC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,GAAR,CAAY,SAAZ,EAAuB;AAACC,QAAAA,MAAM,EAAC;AACnDC,UAAAA,CAAC,EAAC;AADiD;AAAR,OAAvB,CAArB;AAGAL,MAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACH;;AACDE,IAAAA,YAAY;AAEd,GATQ,EASP,EATO,CAAT;AAUA,QAAMK,OAAO,GAAIjB,SAAS,EAA1B;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAbiC,CAcjC;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAEO,OAAO,CAACf,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIQ,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AACM,MAAA,SAAS,EAAC,QADhB;AAEE,MAAA,OAAO,EAAE,CAFX;AAGE,MAAA,cAAc,EAAC,QAHjB;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,SAAS,EAAEe,OAAO,CAACG;AALrB;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAnDuBX,W;UAYHT,S;;;KAZGS,W","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport {Grid, \n        Card,\n        CardHeader,\n        CardContent,\n        CardActions,\n        CardMedia,\n        makeStyles,\n        Typography\n    } from '@material-ui/core';\nimport youtube from '../apis/youtube';\nconst playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\n const useStyles = makeStyles((theme) =>({\n    toolbar: theme.mixins.toolbar,\n    card:{\n        minWidth: 275,\n    },\n    media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n }));\nexport default function CovidVideos(){\n    const [data,setData] = useState(null);\n    useEffect(()=>{\n       async function getCovidVids(){\n           let response = await youtube.get('/search', {params:{\n            q:'COVID-19 Vaccine Podcast',\n           }});\n           setData(response.data);\n       }\n       getCovidVids();\n       \n    },[]);\n    const classes  = useStyles();\n    console.log(data);\n    //let vidItems = data.items;\n    //console.log(\"VITEMS\", vidItems);\n    return(\n        <div className=\"container\">\n            <Header />\n            {/*Create space between grid & app bar*/}\n            <div className={classes.toolbar}> </div>\n                <Grid container \n                      direction=\"column\"\n                  spacing={3}\n                  justifyContent='center'\n                  alignItems='center'\n                  className={classes.gridContainer}\n                >\n                {/**Take Json input from search term and display items in Card. */}\n                {/* {vidItems.length() > 0 ?(\n                    vidItems.map((item) =>{\n                        <Grid item xs={12} sm={6}>\n                            <Card>\n                                  <CardMedia component=\"iframe\"\n                                       title=\"test\"\n                                       src={`https://www.youtube.com/embed/${item.id.videoId}`}  \n                                    />\n                                    <CardContent>\n                                        <Typography align=\"center\" gutterBottom variant=\"h5\">{item.snippet.title}</Typography>\n                                        <Typography align=\"left\" variant=\"body2\">Description:{item.snippet.description}</Typography> \n                                        <Typography align=\"left\" paragraph>Date:{item.snippet.publishedAt}</Typography>\n                                    </CardContent>\n                            </Card>\n                        </Grid>\n                    })   \n                ):(\n                    <Typography variant=\"h3\">No Videos Available, please check if API Key is Valid or Missing</Typography>\n                )} */}\n                </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}