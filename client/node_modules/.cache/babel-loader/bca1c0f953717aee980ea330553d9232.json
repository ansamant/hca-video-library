{"ast":null,"code":"var _jsxFileName = \"/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport { Grid, Card, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport youtube from '../apis/youtube'; //const playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  gridContainer: {\n    minHeight: \"100vh\"\n  },\n  media: {\n    width: \"80%\"\n  }\n}));\nexport default function CovidVideos() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const stored = sessionStorage.getItem(\"covidVidData\");\n\n    if (stored) {\n      console.log(\"GETTING FROM COVID SESSION STORED\");\n      const resData = JSON.parse(stored);\n      setData(resData.items);\n    } else {\n      async function getCovidVids() {\n        console.log(\"GETTING COVID VIDS\");\n        let response = await youtube.get('/search', {\n          params: {\n            q: 'COVID-19 Vaccine Podcast'\n          }\n        }).catch(function (error) {\n          console.log(\"ERROR!!\", error.response);\n        });\n        sessionStorage.setItem(\"covidVidData\", JSON.stringify(response.data));\n        setData(response.data.items);\n      }\n\n      getCovidVids();\n    }\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: classes.gridContainer,\n      children: data.length > 0 ? data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"iframe\",\n            title: \"test\",\n            src: `https://www.youtube.com/embed/${item.id.videoId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              gutterBottom: true,\n              variant: \"h5\",\n              children: item.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle\",\n              children: [\"Description:\", item.snippet.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              paragraph: true,\n              children: [\"Date:\", item.snippet.publishedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"No Such Videos Exist in this Category. Please try the Other List.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CovidVideos, \"fCZiFh5PRnzfrBhxFSk9qK+c93E=\", false, function () {\n  return [useStyles];\n});\n\n_c = CovidVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidVideos\");","map":{"version":3,"sources":["/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx"],"names":["React","useState","useEffect","Header","Grid","Card","CardContent","CardMedia","makeStyles","Typography","youtube","useStyles","theme","toolbar","mixins","gridContainer","minHeight","media","width","CovidVideos","data","setData","stored","sessionStorage","getItem","console","log","resData","JSON","parse","items","getCovidVids","response","get","params","q","catch","error","setItem","stringify","classes","length","map","item","id","videoId","snippet","title","description","publishedAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport {Grid, \n        Card,\n        CardContent,\n        CardMedia,\n        makeStyles,\n        Typography\n    } from '@material-ui/core';\nimport youtube from '../apis/youtube';\n//const playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\n const useStyles = makeStyles((theme) =>({\n    toolbar: theme.mixins.toolbar,\n    gridContainer:{\n        minHeight:\"100vh\",\n    },\n    media:{\n        width:\"80%\",\n    }\n }));\nexport default function CovidVideos(){\n    const [data,setData] = useState([]);\n    useEffect(()=>{\n       const stored = sessionStorage.getItem(\"covidVidData\");\n       if(stored){\n         console.log(\"GETTING FROM COVID SESSION STORED\");\n         const resData = JSON.parse(stored);\n         setData(resData.items);\n       }\n       else{\n            async function getCovidVids(){\n                console.log(\"GETTING COVID VIDS\")\n                let response = await youtube.get('/search', {params:{\n                    q:'COVID-19 Vaccine Podcast',\n                }}).catch(function(error){\n                       console.log(\"ERROR!!\", error.response);\n                });\n                sessionStorage.setItem(\"covidVidData\", JSON.stringify(response.data));\n                setData(response.data.items);\n            }\n           getCovidVids();\n       }\n    },[]);\n    const classes  = useStyles();\n   \n    return(\n        <div className=\"container\">\n            <Header />\n            {/*Create space between grid & app bar*/}\n            <div className={classes.toolbar}> </div>\n                <Grid container \n                      direction=\"column\"\n                      spacing={3}\n                      justifyContent='center'\n                      alignItems='center'\n                      className={classes.gridContainer}\n                >\n                {/**Take Json input from search term and display items in Card. */}\n                {data.length > 0 ?(\n                    data.map((item) => (\n                        <Grid item xs={12} sm={6} md={3}>\n                            <Card>\n                                  <CardMedia \n                                             component=\"iframe\"\n                                             title=\"test\"\n                                             src={`https://www.youtube.com/embed/${item.id.videoId}`}  \n                                    />\n                                    <CardContent>\n                                        <Typography align=\"center\" gutterBottom variant=\"h5\">{item.snippet.title}</Typography>\n                                        <Typography align=\"left\" variant=\"subtitle\">Description:{item.snippet.description}</Typography> \n                                        <Typography align=\"left\" paragraph>Date:{item.snippet.publishedAt}</Typography>\n                                    </CardContent>\n                            </Card>\n                        </Grid>\n                ))   \n                ):(\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">No Such Videos Exist in this Category. Please try the Other List.</Typography>\n                    </Grid>\n                    \n                )}\n                </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}