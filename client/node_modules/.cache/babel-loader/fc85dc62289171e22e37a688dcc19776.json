{"ast":null,"code":"var _jsxFileName = \"/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport { Grid, Card, CardHeader, CardContent, CardActions, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport youtube from '../apis/youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\nconst useStyles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  card: {\n    minWidth: \"640px\",\n    height: \"400px\"\n  },\n  media: {\n    margin: \"auto\",\n    width: \"100%\"\n  }\n}));\nexport default function CovidVideos() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    async function getCovidVids() {\n      let response = await youtube.get('/search', {\n        params: {\n          q: 'COVID-19 Vaccine Podcast'\n        }\n      });\n      setData(response.data.items);\n    }\n\n    getCovidVids();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: classes.gridContainer,\n      children: data.length > 0 ? data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            component: \"iframe\",\n            title: \"test\",\n            src: `https://www.youtube.com/embed/${item.id.videoId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              gutterBottom: true,\n              variant: \"h5\",\n              children: item.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle\",\n              children: [\"Description:\", item.snippet.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              paragraph: true,\n              children: [\"Date:\", item.snippet.publishedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"No Videos Available, please check if API Key is Valid or Missing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CovidVideos, \"fCZiFh5PRnzfrBhxFSk9qK+c93E=\", false, function () {\n  return [useStyles];\n});\n\n_c = CovidVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidVideos\");","map":{"version":3,"sources":["/Users/adityasamant/Documents/Programs i made/HCA Front End DevCode Challenge/hca-video-library/src/components/covidVideo.jsx"],"names":["React","useState","useEffect","Header","Grid","Card","CardHeader","CardContent","CardActions","CardMedia","makeStyles","Typography","youtube","playlistId","useStyles","theme","toolbar","mixins","card","minWidth","height","media","margin","width","CovidVideos","data","setData","getCovidVids","response","get","params","q","items","classes","gridContainer","length","map","item","id","videoId","snippet","title","description","publishedAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport {Grid, \n        Card,\n        CardHeader,\n        CardContent,\n        CardActions,\n        CardMedia,\n        makeStyles,\n        Typography\n    } from '@material-ui/core';\nimport youtube from '../apis/youtube';\nconst playlistId = 'PLogA9DP2_vSekxHP73PXaKD6nbOK56CJw';\n const useStyles = makeStyles((theme) =>({\n    toolbar: theme.mixins.toolbar,\n    card:{\n        minWidth: \"640px\",\n        height:\"400px\",\n    },\n    media: {\n        margin: \"auto\",\n        width: \"100%\"\n  },\n }));\nexport default function CovidVideos(){\n    const [data,setData] = useState([]);\n    useEffect(()=>{\n       async function getCovidVids(){\n           let response = await youtube.get('/search', {params:{\n            q:'COVID-19 Vaccine Podcast',\n           }});\n           setData(response.data.items);\n       }\n       getCovidVids();\n       \n    },[]);\n    const classes  = useStyles();\n   \n    return(\n        <div className=\"container\">\n            <Header />\n            {/*Create space between grid & app bar*/}\n            <div className={classes.toolbar}> </div>\n                <Grid container \n                      direction=\"column\"\n                      spacing={3}\n                      justifyContent='center'\n                      alignItems='center'\n                      className={classes.gridContainer}\n                >\n                {/**Take Json input from search term and display items in Card. */}\n                {data.length > 0 ?(\n                    data.map((item) => (\n                        <Grid item xs={12} sm={6}>\n                            <Card>\n                                  <CardMedia className={classes.media} \n                                             component=\"iframe\"\n                                             title=\"test\"\n                                             src={`https://www.youtube.com/embed/${item.id.videoId}`}  \n                                    />\n                                    <CardContent>\n                                        <Typography align=\"center\" gutterBottom variant=\"h5\">{item.snippet.title}</Typography>\n                                        <Typography align=\"left\" variant=\"subtitle\">Description:{item.snippet.description}</Typography> \n                                        <Typography align=\"left\" paragraph>Date:{item.snippet.publishedAt}</Typography>\n                                    </CardContent>\n                            </Card>\n                        </Grid>\n                ))   \n                ):(\n                    <Grid item xs={12}>\n                        <Typography variant=\"h3\">No Videos Available, please check if API Key is Valid or Missing</Typography>\n                    </Grid>\n                    \n                )}\n                </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}